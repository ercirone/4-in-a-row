{"version":3,"sources":["Piece.js","Grid.js","Game.js","index.js"],"names":["Piece","i","this","props","row","j","column","classes","type","highlighted","push","disabled","cx","cy","r","className","join","onClick","React","Component","Grid","pieces","includes","gameOver","width","height","viewBox","x","y","Game","state","Array","fill","blueIsNext","winning","winningPieces","handleClick","length","filter","p","findIndex","newPieceType","newPieces","setState","winningRows","map","k","a","b","c","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf4152d7.chunk.js","sourcesContent":["import React from 'react';\nimport './Piece.css';\n\nclass Piece extends React.Component {\n  render() {\n    const i = this.props.row; // Ranging from 1 to 6.\n    const  j = this.props.column; // Ranging from 1 to 7.\n    let classes = ['Piece', this.props.type];\n    if (this.props.highlighted) {\n        classes.push('highlighted');\n    }\n    if (this.props.disabled) {\n        classes.push('disabled');\n    }\n    return(\n      <circle\n        cx={5 + (j + 0.5) * 50}\n        cy={355 - (i + 0.5) * 50}\n        r=\"22\"\n        className={classes.join(' ')}\n        onClick={() => this.props.onClick(j)}\n      />\n    );\n  }\n}\n\nexport default Piece;","import React from 'react';\nimport Piece from './Piece';\nimport './Grid.css';\n\nclass Grid extends React.Component {\n  render() {\n    let pieces = [];\n    for (let j=0; j<7; j++) {\n      for (let i=0; i<6; i++) {\n        const type = this.props.pieces[j + 7 * i];\n        pieces.push(\n          <Piece\n            row={i}\n            column={j}\n            type={type}\n            key={i + '-' + j}\n            onClick={(column) => this.props.onClick(column)}\n            highlighted={this.props.highlighted.includes(j + 7 * i)}\n            disabled={this.props.gameOver}\n          />\n        );\n      }\n    }\n      return (\n      <svg width=\"360\" height=\"360\" viewBox=\"0 0 360 360\" className=\"Grid\">\n        <rect x=\"3\" y=\"53\" width=\"354\" height=\"304\" className=\"Rect\" />\n        {pieces}\n      </svg>\n    );\n  }\n}\n\nexport default Grid;","import React from 'react';\nimport Grid from './Grid';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieces: Array(42).fill('E'), // 'E' stands for empty.\n      /*  \n      i = row (from bottom to top)\n      j = column (from left to right)\n      (i,j)-coordinate goes to j + 7 * i\n      */\n      blueIsNext: true,\n    };\n  }\n\n  render() {\n    const winning = this.winningPieces();\n    return (\n      <div className=\"game\">\n        <Grid\n          pieces={this.state.pieces}\n          onClick={(column) => this.handleClick(column)}\n          gameOver={winning.length !== 0}\n          highlighted={winning}\n          />\n      </div>\n    );\n  }\n\n  handleClick(column) {\n    const columnToChange = this.state.pieces.filter((p,i) => (i%7 === column));\n    const row = columnToChange.findIndex(p => (p === 'E'));\n    const newPieceType = this.state.blueIsNext ? 'B' : 'R';\n    let newPieces = [...this.state.pieces];\n    newPieces[column + 7 * row] = newPieceType;\n    this.setState({\n      pieces: newPieces,\n      blueIsNext: !this.state.blueIsNext,\n    });\n  }\n\n  winningPieces() {\n    let winningRows = [];\n    // Adds winning rows\n    for (let j=0; j<=3; j++) {\n      for (let i=0; i<=5; i++) {\n        winningRows.push([0,1,2,3].map(k => k + j + 7 * i));\n      }\n    }\n    // Adds winning columns\n    for (let j=0; j<=6; j++) {\n      for (let i=0; i<=2; i++) {\n        winningRows.push([0,7,14,21].map(k => k + j + 7 * i));\n      }\n    }\n    // Adds winning diagonals\n    for (let j=0; j<=3; j++) {\n      for (let i=0; i<=2; i++) {\n        winningRows.push([0,8,16,24].map(k => k + j + 7 * i));\n      }\n    }\n    // Adds winning antidiagonals\n    for (let j=0; j<=3; j++) {\n      for (let i=0; i<=2; i++) {\n        winningRows.push([21,15,9,3].map(k => k + j + 7 * i));\n      }\n    }\n    const pieces = this.state.pieces;\n    for (let [a,b,c,d] of winningRows) {\n      if (pieces[a] !== 'E' && pieces[a] === pieces[b] && pieces[b] === pieces[c] && pieces[c] === pieces[d]) {\n        return [a,b,c,d];\n      }\n    }\n    return [];\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>4 in a row</h1>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}